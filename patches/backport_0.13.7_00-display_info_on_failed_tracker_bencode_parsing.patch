--- rak/string_manip.h	2017-05-14 18:49:50.413687258 +0100
+++ rak/string_manip.h	2017-05-15 18:49:46.947372437 +0100
@@ -371,6 +371,51 @@ is_all_name(const Sequence& src) {
   return is_all_name(src.begin(), src.end());
 }
 
+template <typename Iterator>
+std::string
+sanitize(Iterator first, Iterator last) {
+  std::string dest;
+  for (; first != last; ++first) {
+    if (std::isprint(*first) && *first != '\r' && *first != '\n' && *first != '\t')
+      dest += *first;
+    else
+      dest += " ";
+  }
+
+  return dest;
+}
+
+template <typename Sequence>
+std::string
+sanitize(const Sequence& src) {
+    return trim(sanitize(src.begin(), src.end()));
+}
+
+template <typename Iterator>
+std::string striptags(Iterator first, Iterator last) {
+  bool copychar = true;
+  std::string dest;
+
+  for (; first != last; ++first) {
+    if (std::isprint(*first) && *first == '<') {
+      copychar = false;
+    } else if (std::isprint(*first) && *first == '>') {
+      copychar = true;
+      continue;
+    }
+
+    if (copychar)
+      dest += *first;
+  }
+
+  return dest;
+}
+
+template <typename Sequence>
+std::string striptags(const Sequence& src) {
+    return striptags(src.begin(), src.end());
+}
+
 }
 
 #endif
--- src/tracker/tracker_http.cc	2016-12-12 08:49:18.000000000 +0000
+++ src/tracker/tracker_http.cc	2017-05-15 18:51:42.460079984 +0100
@@ -288,8 +288,10 @@ TrackerHttp::receive_done() {
   Object b;
   *m_data >> b;
 
-  if (m_data->fail())
-    return receive_failed("Could not parse bencoded data");
+  if (m_data->fail()) {
+    std::string dump = m_data->str();
+    return receive_failed("Could not parse bencoded data: " + rak::sanitize(rak::striptags(dump)).substr(0,99));
+  }
 
   if (!b.is_map())
     return receive_failed("Root not a bencoded map");
